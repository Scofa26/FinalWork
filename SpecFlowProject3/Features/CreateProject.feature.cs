// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SpecFlowProject3.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("CreateProject")]
    public partial class CreateProjectFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private static string[] featureTags = ((string[])(null));
        
#line 1 "CreateProject.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "CreateProject", @"Проверка на успешное создание сущности ""Проект""
Проверка на ввод граничного значения в поле Summary
Проверка на ввод значения >80 символов в поле Summary
Зафейлиный тест на создание проекта
Проверка диалогового окна включена в эти тесты. На шаге * modal dialog is opened проверяю, что окно открыто, а также title", ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 9
#line hidden
#line 10
    testRunner.Given("open the login page and enter pass and email", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Succsessful creating the project")]
        [NUnit.Framework.CategoryAttribute("GUI")]
        [NUnit.Framework.CategoryAttribute("allure.label.story:ProjectsFeature")]
        [NUnit.Framework.CategoryAttribute("critical")]
        [NUnit.Framework.CategoryAttribute("allure.label.owner:SophiaChida")]
        public void SuccsessfulCreatingTheProject()
        {
            string[] tagsOfScenario = new string[] {
                    "GUI",
                    "allure.label.story:ProjectsFeature",
                    "critical",
                    "allure.label.owner:SophiaChida"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Succsessful creating the project", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 16
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 9
this.FeatureBackground();
#line hidden
#line 17
 testRunner.When("user click AddProjectButton", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 18
 testRunner.And("modal dialog is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "* ");
#line hidden
#line 19
 testRunner.And("user enters \"FirstProject\" to the projectName field and \"projectSummary\" to the p" +
                        "rojectSummary field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "* ");
#line hidden
#line 20
 testRunner.Then("Project is created, homePage is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Succsessful filling the summary field by boundary value")]
        [NUnit.Framework.CategoryAttribute("GUI")]
        [NUnit.Framework.CategoryAttribute("allure.label.story:ProjectsFeature")]
        [NUnit.Framework.CategoryAttribute("critical")]
        [NUnit.Framework.CategoryAttribute("allure.label.owner:SophiaChida")]
        public void SuccsessfulFillingTheSummaryFieldByBoundaryValue()
        {
            string[] tagsOfScenario = new string[] {
                    "GUI",
                    "allure.label.story:ProjectsFeature",
                    "critical",
                    "allure.label.owner:SophiaChida"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Succsessful filling the summary field by boundary value", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 26
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 9
this.FeatureBackground();
#line hidden
#line 27
 testRunner.When("user click AddProjectButton", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 28
 testRunner.And("modal dialog is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "* ");
#line hidden
#line 29
 testRunner.And("user enters \"projectName2\" to the projectName field and summary", "Test with successful filling the summary field by boundary value. Count of chars", ((TechTalk.SpecFlow.Table)(null)), "* ");
#line hidden
#line 33
 testRunner.Then("count of chars is equal to 80", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 34
 testRunner.And("Project is created, homePage is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "* ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Succsessful filling the summary field by value > 80")]
        [NUnit.Framework.CategoryAttribute("GUI")]
        [NUnit.Framework.CategoryAttribute("allure.label.story:ProjectsFeature")]
        [NUnit.Framework.CategoryAttribute("critical")]
        [NUnit.Framework.CategoryAttribute("allure.label.owner:SophiaChida")]
        public void SuccsessfulFillingTheSummaryFieldByValue80()
        {
            string[] tagsOfScenario = new string[] {
                    "GUI",
                    "allure.label.story:ProjectsFeature",
                    "critical",
                    "allure.label.owner:SophiaChida"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Succsessful filling the summary field by value > 80", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 40
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 9
this.FeatureBackground();
#line hidden
#line 41
 testRunner.When("user click AddProjectButton", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 42
 testRunner.And("modal dialog is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "* ");
#line hidden
#line 43
 testRunner.And("user enters summary is more than 80", "Test with successful filling the summary field by boundary value. Count of chars " +
                        "83", ((TechTalk.SpecFlow.Table)(null)), "* ");
#line hidden
#line 47
 testRunner.Then("count of chars is equal to 80", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Failed creating the project")]
        [NUnit.Framework.CategoryAttribute("GUI")]
        [NUnit.Framework.CategoryAttribute("allure.label.story:ProjectsFeature")]
        [NUnit.Framework.CategoryAttribute("critical")]
        [NUnit.Framework.CategoryAttribute("allure.label.owner:SophiaChida")]
        public void FailedCreatingTheProject()
        {
            string[] tagsOfScenario = new string[] {
                    "GUI",
                    "allure.label.story:ProjectsFeature",
                    "critical",
                    "allure.label.owner:SophiaChida"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Failed creating the project", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 53
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 9
this.FeatureBackground();
#line hidden
#line 54
 testRunner.When("user click AddProjectButton", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 55
 testRunner.And("modal dialog is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "* ");
#line hidden
#line 56
 testRunner.And("user enters \"\" to the projectName field and \"\" to the projectSummary field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "* ");
#line hidden
#line 57
 testRunner.Then("Project is created, homePage is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
